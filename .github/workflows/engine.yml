name: Engine CI/CD

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'engine/**'
      - '.github/workflows/engine.yml'
  pull_request:
    branches: [ main ]
    paths: 
      - 'engine/**'

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./engine

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: engine/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run tests
      run: npm run test

    - name: Build application
      run: npm run build

    - name: Test health endpoint
      run: |
        npm start &
        APP_PID=$!
        
        # Wait for app to start with timeout
        timeout 30 bash -c 'until curl -f http://localhost:3001/api/health; do sleep 2; done'
        
        # Test API endpoints
        curl -f http://localhost:3001/api/health
        curl -f -X POST http://localhost:3001/api/menu/generate \
          -H "Content-Type: application/json" \
          -d '{"people": 2, "budget": "medium"}'
        
        # Clean up
        kill $APP_PID

    - name: Upload build artifacts
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v3
      with:
        name: engine-build
        path: engine/dist/

  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    defaults:
      run:
        working-directory: ./engine

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Render
      run: |
        RESPONSE=$(curl -s -X POST \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{}' \
          https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys)
        
        DEPLOY_ID=$(echo $RESPONSE | jq -r '.id')
        echo "Deploy initiated with ID: $DEPLOY_ID"
        
        if [ "$DEPLOY_ID" = "null" ]; then
          echo "Failed to initiate deployment"
          echo $RESPONSE
          exit 1
        fi